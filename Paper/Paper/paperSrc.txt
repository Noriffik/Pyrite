<img src="http://noant.github.io/Pyrite/Paper/Img/main.JPG" alt="image"/>
<cut text="Просмотр" />

Всем добрый день. В качестве хобби написал программу, которую можно использовать как часть системы “умный дом”. Чтобы сразу заинтересовать читателя, продемонстрирую некоторую малую часть сценариев использования ПО:

<table>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif3_3.gif" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif3_3.gif" alt="image"/></a>
</td>
<td>
Включение и выключение ZWave лампочки через мобильное приложение
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif1_1.gif" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif1_1.gif" alt="image"/></a>
</td>
<td>
При появлении устройства в сети (по приходу пользователя домой) происходит <br/>включение ZWave лампочки, релейного модуля Modbus RTU, запуск компьютера через WakeOnLan и включение ТВ
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif2_2.gif" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Gif/pyriteGif2_2.gif" alt="image"/></a>
</td>
<td>
Запуск браузера, переход на яндекс.радио,<br/> перелистывание треков (эмуляция горячих клавиш) 
</td>
</tr>
</table>

<b>Вкратце</b>: 
1)	Основная часть ПО - сервер, который крутится на ОС Windows, написан на C#;
2)	Клиент на ОС Android, написан на Java;
3)	Планируются клиенты на UWP и IOS, web-клиент.

<b>Некоторые особенности ПО</b>:
1)	Конструктор сценариев. Создание сложных сценариев с циклами и условиями;
2)	Работа с устройствами ZWave и Modbus;
3)	Вложенность сценариев. Можно один сценарий использовать в другом в качестве процедуры;
4)	Запуск удаленного сценария. В сценарии текущего сервера можно запускать сценарий удаленного;
5)	Возможность добавлять в систему свою функциональность посредством создания модулей;
6)	Запуск сценариев с помощью смартфона.

<H3><font color="steelblue">Конструктор сценариев</font></H3>
Программа позволяет создавать как сложный сценарий, так и одиночное действие.

<u>Одиночное действие</u> - это сценарий, который содержит только одно действие. В нем нет возможности создавать циклы и условия, а можно лишь “замапить” определенное действие на кнопку в UI клиента. 
В качестве примера приведу свой способ их использования: создал категорию “Розетки”, в ней собрал все лампы, бытовой вентилятор, светильники, телевизор и компьютер. Теперь, чтобы включить одно из этих устройств, следует открыть клиент на андроиде, зайти в категорию “Розетки” и выбрать соответствующий пункт меню.
Обычно, одиночные действия использовать неудобно, так как различные устройства удобно запускать при каком-то условии или хотя-бы не по одному. Именно для этого нужен “сложный сценарий”, о чем далее.

<u>Конструктор сложного сценария</u> позволяет создавать сценарии с циклами и условиями. Имеет два режима: просмотр и редактирование.
<table>
<tr>
<td>
Пример сценария в режиме просмотра
</td>
<td>
Пример сценария в режиме редактирования
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/scen_example_view.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/scen_example_view.jpg" alt="image"/></a>
</td>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/scen_example_edit.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/scen_example_edit.jpg" alt="image"/></a>
</td>
</tr>
</table>
<i>ЕСЛИ и ИНАЧЕ в конструкторе</i>. В данных конструкциях можно создавать цепочки условий с логическими операторами НЕ, ИЛИ, И. Также, можно создавать группу условий и использовать операторы непосредственно с группой. Если условие остается пустым, то оно автоматом вычисляется как ЛОЖЬ. 
Есть некоторое количество встроенных проверок (такие как проверка на дату, время и т.д.), а так же несколько в качестве подключаемых модулей.

<i>Цикл ПОКА в конструкторе</i>. Цикл состоит из условия и тела. Условие создается аналогично тому, как он создается в конструкции ЕСЛИ (группы условий, операторы НЕ, ИЛИ, И).
<table>
<tr>
<td>
Оператор ЕСЛИ и возможные условия
</td>
<td>
Оператор ПОКА
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/if_example.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/if_example.jpg" width="338" alt="image"/></a>
</td>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/while_example.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/while_example.jpg" width="338" alt="image"/></a>
</td>
</tr>
</table>
<table>
<tr>
<td>
Тела ЕСЛИ, ИНАЧЕ и ПОКА нужно чем-то заполнять. Собственно, это содержимое и есть самое важное в сценарии.
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/action_example.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/action_example.jpg" alt="image"/></a>
</td>
</tr>
</table>
<table>
<tr>
<td>
Основное окно конструктора сценариев
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/Paper/Img/constructor_window.jpg" target="_blank"><img src="http://noant.github.io/Pyrite/Paper/Img/constructor_window.jpg" alt="image"/></a>
</td>
</tr>
</table>

Так же можно настроить следующие параметры сценариев:
- Запуск извне (вкл/выкл), позволяет запретить или разрешить запуск сценария с другой машины или из клиента;
- Автоматический запуск сценария при старте системы;
- Выбор категории сценария, позволяет отображать в UI клиента пункт меню для запуска сценария в определенной категории.

<H3><font color="steelblue">Работа с устройствами ZWave и Modbus</font></H3>
На данный момент система поддерживает устройства ZWave (на основе openzwave) и Modbus RTU (на основе nmodbus).

<u>ZWave</u> - это беспроводной протокол связи, использующийся в домашней автоматизации. Для реализации протокола используются миниатюрные маломощные радиочастотные модули. Сейчас на рынке ZWave представлен довольно обширный перечень устройств, такие как ZWave лампочки, розетки, релейные модули, переключатели, замки, датчики температуры (влажности, движения, протечки), терморегуляторы, устройства управления кондиционером и т.д. Так же распространены мультисенсоры - устройства, сочетающие несколько датчиков (например датчик освещенности, присутствия, температуры и дверной датчик), что весьма привлекательно с точки зрения финансовых затрат и расположения в помещении.

В моей программе модуль ZWave позволяет производить все стандартные операции с устройствами, такие как удаление,  добавление устройств, сброс контроллера. Так же можно использовать несколько ZWave контроллеров, конечный пользователь не увидит разницы. К примеру, можно осуществить снятие показаний температуры с датчика, который соединён с контроллером «А» и запустить кондиционер с помощью контроллера «Б». Тут нет ни каких ограничений, любое действие и проверка осуществляется стандартными способами и добавляется в конструкторе сценариев.
<table>
<tr>
<td>
//
</td>
<td>
В качестве контроллера ZWave можно использовать USB stick
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/PyriteUI/zwave_main_window.png" target="_blank"><img src="http://noant.github.io/Pyrite/PyriteUI/zwave_main_window.png" alt="image"  width="300"/></a>
</td>
<td>
Основное окно ZWave модуля
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/PyriteUI/zwave_select_controller_window.png" target="_blank"><img src="http://noant.github.io/Pyrite/PyriteUI/zwave_select_controller_window.png" alt="image"  width="300"/></a>
</td>
<td>
Окно выбора контроллера и операций с ним
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/PyriteUI/zwave_select_node_window.png" target="_blank"><img src="http://noant.github.io/Pyrite/PyriteUI/zwave_select_node_window.png" alt="image"/></a>
</td>
<td>
Выбор узла (датчики, переключатели и т.д.)
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/PyriteUI/zwave_select_value_window.png" target="_blank"><img src="http://noant.github.io/Pyrite/PyriteUI/zwave_select_value_window.png" alt="image"/></a>
</td>
<td>
Выбор параметра узла (включен/выключен, различные числовые параметры, такие как температура, влажность и т.д.)
</td>
</tr>
</table>
<u>Modbus</u> - это проводной протокол, применяемый для связи между электронными устройствами, которые его поддерживают. В контексте нашей программы может быть полезен для работы с релейными модулями, для чего я его и использую у себя дома.
<table>
<tr>
<td>
///
</td>
<td>
Релейный модуль Modbus, соединяется с контроллером через COM-порт
</td>
</tr>
<tr>
<td>
<a href="http://noant.github.io/Pyrite/PyriteUI/zwave_select_controller_window.png" target="_blank"><img src="http://noant.github.io/Pyrite/PyriteUI/zwave_select_controller_window.png" alt="image"  width="300"/></a>
</td>
<td>
Основное окно Mosbus RTU модуля
</td>
</tr>
</table>
<H3><font color="steelblue">Вложенность сценариев</font></H3>
Вложенность сценариев используется для декомпозиции сценариев умного дома. Часто бывают такие ситуации, когда одно действие участвует во многих сценариях (например, отключение всех бытовых устройств может происходить по нажатию на пункт меню в программе, по сценарию выхода всех wi-fi устройств из сети, просто по таймеру), и поэтому каждый раз создавать (или править) одинаковый алгоритм в каждом из сценариев не представляется удобным. Для этого существует такое встроенное действие, которое позволяет запускать уже созданный сценарий в текущем. Так же это может быть удобно, когда часто добавляются новые бытовые устройства (или другие частые изменения в алгоритме работы “умного дома”), для изменения работы всех сценариев достаточно будет изменить лишь один сценарий, который используется в них.
<table>
<tr>
<td>
///
</td>
<td>
Шаг 0. Создаем сценарий.
</td>
</tr>
<tr>
<td>
///
</td>
<td>
Шаг 1. Выбираем его в целевом сценарии.
</td>
</tr>
<tr>
<td>
///
</td>
<td>
Шаг 2. Используем.
</td>
</tr>
</table>